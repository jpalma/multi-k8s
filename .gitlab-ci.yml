image: docker:19.03.12
services:
  - docker:19.03.12-dind

stages:
  - Test
  - Build and Release Images
  - Deploy



# Test:
#   stage: Test
#   before_script:
#   - docker build -t registry.gitlab.com/shogun-courses/multi-k8s/react-test -f ./client/Dockerfile.dev ./client
# #   script:
# before_script:
#   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker run -e CI=true registry.gitlab.com/shogun-courses/multi-k8s/react-test npm test

# Build:
#   stage: Build and Release Images
#   variables:
#     REPO_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   script:
#     - docker build -t $CI_REGISTRY_IMAGE/multi-client:latest -t $CI_REGISTRY_IMAGE/multi-client:$CI_COMMIT_SHORT_SHA ./client
#     - docker build -t $CI_REGISTRY_IMAGE/multi-server:latest -t $CI_REGISTRY_IMAGE/multi-server:$CI_COMMIT_SHORT_SHA ./server
#     - docker build -t $CI_REGISTRY_IMAGE/multi-worker:latest -t $CI_REGISTRY_IMAGE/multi-worker:$CI_COMMIT_SHORT_SHA ./worker
#     - docker push $CI_REGISTRY_IMAGE/multi-client:latest
#     - docker push $CI_REGISTRY_IMAGE/multi-server:latest
#     - docker push $CI_REGISTRY_IMAGE/multi-worker:latest
#     - docker push $CI_REGISTRY_IMAGE/multi-client:$CI_COMMIT_SHORT_SHA
#     - docker push $CI_REGISTRY_IMAGE/multi-server:$CI_COMMIT_SHORT_SHA
#     - docker push $CI_REGISTRY_IMAGE/multi-worker:$CI_COMMIT_SHORT_SHA



Deploy:
  stage: Deploy
  script:
    - apk update  && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
    - kubectl config view
    - kubectl create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_DEPLOY_USER" --docker-password="$CI_DEPLOY_PASSWORD" --docker-email="$GITLAB_USER_EMAIL" -o yaml --dry-run=client | kubectl apply -f -

# Deploy:
#   stage: Deploy
#   image: dtzar/helm-kubectl
#   before_script:
#     - apk add -u gettext
#     - kubectl create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_DEPLOY_USER" --docker-password="$CI_DEPLOY_PASSWORD" --docker-email="$GITLAB_USER_EMAIL" -o yaml --dry-run=client | kubectl apply -f -
#   environment:
#     name: test
#     url: test.yourapp.com
#   script:
#     - VERSION="${CI_COMMIT_TAG:-none}" envsubst < k8s.yml | kubectl apply -f -

# Deploy:
#   stage: Deploy
#   image: bitnami/kubectl
#   script:
#     # - apk update  && apk add --no-cache curl
#     # - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#     # - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
#     # - mkdir -p $HOME/.kube
#     # - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
#     - kubectl version
#     - kubectl create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" -o yaml --dry-run=client
#


    # - kubectl apply -f k8s
    # - kubectl set image deployments/server-deployment server=$CI_REGISTRY_IMAGE/multi-server:latest
    # - kubectl set image deployments/client-deployment client=$CI_REGISTRY_IMAGE/multi-client:latest
    # - kubectl set image deployments/worker-deployment worker=$CI_REGISTRY_IMAGE/multi-worker:latest
  # only:
  #   - master


# Deploy:
#   stage: Deploy
#   script:
#     - apk update  && apk add --no-cache curl
#     - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#     - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
#     - mkdir -p $HOME/.kube
#     - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
#     - kubectl create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_DEPLOY_USER" --docker-password="$CI_DEPLOY_PASSWORD" --docker-email="$GITLAB_USER_EMAIL" -o yaml --dry-run=client | kubectl apply -f k8s
